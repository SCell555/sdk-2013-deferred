

#include "common_ps_fxc.h"
#include "common_deferred_fxc.h"


sampler sDepth							: register( s0 );
sampler sRadiosity						: register( s1 );


const float3 g_vecViewOrigin				: register( c0 );
const float3 g_vecRadiosityOrigin			: register( c1 );
const float3 g_vecRadiosityOrigin_Far		: register( c2 );
const float g_flRadiositySettings			: register( c3 );


struct PS_INPUT
{
	float2 vTexCoord				: TEXCOORD0;
	float3 vecWorldRay				: TEXCOORD1;
};


struct PS_OUTPUT
{
	float4 vColor_0				:	COLOR0;
};

PS_OUTPUT main( const PS_INPUT In )
{
	PS_OUTPUT Out;

	float flDepth = tex2D( sDepth, In.vTexCoord ).x;

	clip( min( flDepth - 0.1f, DEPTH_RECONSTRUCTION_LIMIT - flDepth ) );

	float3 worldPos = g_vecViewOrigin + In.vecWorldRay * flDepth;

	float3 color = DoRadiosity( worldPos, sRadiosity,
		g_vecRadiosityOrigin, g_vecRadiosityOrigin_Far, g_flRadiositySettings );

	Out.vColor_0 = float4( color , 1 );

	return Out;
}